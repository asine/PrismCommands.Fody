name: Publish NuGet Package

on:
  release:
    types:
      - published

env:
  DOTNET_VERSION: '7.0.x'
  VS_VERSION: '17.0'
  NUGET_API_SOURCE: 'https://api.nuget.org/v3/index.json'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup MSBuild and .NET Framework Developer Pack
        uses: microsoft/setup-msbuild@v1
        with:
          vs-version: ${{ env.VS_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Extract version from tag
        id: get_version
        shell: pwsh
        run: |
          $Version = $Env:GITHUB_REF -replace 'refs/tags/', ''
          echo "VERSION=$Version" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
          Write-Host "Extracted version: $Version"

      - name: Build solution
        run: dotnet build --configuration Release --no-restore /p:PackageVersion=${{ env.VERSION }} /p:PackageOutputPath="${{ env.GITHUB_WORKSPACE }}\nugets"

      - name: Find and publish nupkg file
        if: ${{ env.PUBLISH_TO_NUGET == 'true' }}
        shell: pwsh
        run: |
          $nupkgPath = (Get-ChildItem -Path "${{ env.GITHUB_WORKSPACE }}\nugets" -Filter *.nupkg -Recurse).FullName
          if (!$nupkgPath) {
            Write-Error "nupkg file not found"
            exit 1
          }
          Write-Host "Found nupkg file at path: $nupkgPath"
          dotnet nuget push $nupkgPath --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ env.NUGET_API_SOURCE }}
          Write-Host "Published nupkg file to NuGet"

      - name: Attach nupkg file to release
        shell: pwsh
        run: |
          $nupkgPath = (Get-ChildItem -Path "${{ env.GITHUB_WORKSPACE }}\nugets" -Filter *.nupkg -Recurse).FullName
          $nupkgName = (Split-Path -Path $nupkgPath -Leaf)
          $tag = $Env:GITHUB_REF -replace 'refs/tags/', ''
          $release = Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag" -Headers @{ "Authorization" = "token ${{ secrets.GH_PERSONAL_TOKEN }}" }
          $uploadUrl = $release.upload_url -replace '{\?name,label}', "?name=$nupkgName"
          $headers = @{
            "Authorization" = "token ${{ secrets.GH_PERSONAL_TOKEN }}"
            "Content-Type" = "application/octet-stream"
          }
          Write-Host "Upload URL: $uploadUrl"
          Write-Host "nupkg name: $nupkgName"
          Write-Host "File to upload: $nupkgPath"
          Invoke-WebRequest -Uri $uploadUrl -Headers $headers -InFile $nupkgPath -Method 'POST'
          Write-Host "Attached nupkg file to release"
