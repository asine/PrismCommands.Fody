name: Publish NuGet Package

on:
  release:
    types:
      - published

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'

    - name: Setup MSBuild and .NET Framework Developer Pack
      uses: microsoft/setup-msbuild@v1
      with:
        vs-version: '17.0'
        dotnet-framework-version: '4.5.2'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Publish NuGet package
      run: dotnet nuget push ../nugets/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Get release info
      id: release
      run: |
        echo "RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases | jq '.[] | select(.tag_name=="${{ github.ref }}") | .id')" >> $GITHUB_ENV
        echo "UPLOAD_URL=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases | jq -r '.[] | select(.tag_name=="${{ github.ref }}") | .upload_url')" >> $GITHUB_ENV

    - name: Upload nupkg as release asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        nupkg_path=$(ls ../nugets/*.nupkg)
        asset_name=$(basename $nupkg_path)
        curl \
          -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary "@${nupkg_path}" \
          "${UPLOAD_URL}?name=${asset_name}"
